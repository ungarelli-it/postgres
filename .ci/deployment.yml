kind: Deployment
apiVersion: apps/v1
metadata:
  name: ${APP_NAME}
  namespace: ${NAMESPACE}
  labels:
    app: ${APP_NAME}
spec:
  replicas: 1
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
    type: RollingUpdate
  selector:
    matchLabels:
      app: ${APP_NAME}
  template:
    metadata:
      labels:
        app: ${APP_NAME}
    spec:
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
             matchExpressions:
             - key: app
               operator: In
               values:
               - ${APP_NAME}
            topologyKey: "kubernetes.io/hostname"
      containers:
      - name: ${APP_NAME}
        image: ghcr.io/ungarelli-it/${APP_NAME}:${BRANCH_NAME}
        imagePullPolicy: Always
        ports:
        - containerPort: 5432
        envFrom:
        - secretRef:
            name: ${APP_NAME}
        - configMapRef:
            name: ${APP_NAME}
        resources:
          requests:
            memory: "256Mi"
            cpu: "50m"
          limits:
            memory: "512Mi"
            cpu: "100m"
        volumeMounts:
          - name: ${NAMESPACE}-${APP_NAME}
            mountPath: /var/lib/postgresql/data
            subPath: ${NAMESPACE}/${APP_NAME}/
      volumes:
        - name: ${NAMESPACE}-${APP_NAME}
          persistentVolumeClaim:
            claimName: ${APP_NAME}
      nodeSelector:
        "beta.kubernetes.io/os": linux
      imagePullSecrets:
        - name: dockerimages
